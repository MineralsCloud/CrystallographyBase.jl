var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CrystallographyBase","category":"page"},{"location":"#CrystallographyBase","page":"Home","title":"CrystallographyBase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CrystallographyBase.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CrystallographyBase]","category":"page"},{"location":"#CrystallographyBase.ReciprocalPoint","page":"Home","title":"CrystallographyBase.ReciprocalPoint","text":"ReciprocalPoint(x, y, z, w)\n\nRepresent a special point of the 3D Brillouin zone. Each of them has a weight w.\n\n\n\n\n\n","category":"type"},{"location":"#CrystallographyBase.cellvolume-NTuple{6, Any}","page":"Home","title":"CrystallographyBase.cellvolume","text":"cellvolume(a, b, c, α, β, γ)\n\nCalculates the cell volume from 6 cell parameters.\n\n\n\n\n\n","category":"method"},{"location":"#CrystallographyBase.cellvolume-Tuple{MetricTensor}","page":"Home","title":"CrystallographyBase.cellvolume","text":"cellvolume(g::MetricTensor)\n\nCalculates the cell volume from a MetricTensor.\n\n\n\n\n\n","category":"method"},{"location":"#CrystallographyBase.cellvolume-Tuple{Union{Lattice, ReciprocalLattice}}","page":"Home","title":"CrystallographyBase.cellvolume","text":"cellvolume(l::Lattice)\ncellvolume(c::Cell)\n\nCalculates the cell volume from a Lattice or a Cell.\n\n\n\n\n\n","category":"method"},{"location":"#CrystallographyBase.supercell-Tuple{Lattice, AbstractMatrix{var\"#s27\"} where var\"#s27\"<:Integer}","page":"Home","title":"CrystallographyBase.supercell","text":"supercell(cell::Lattice, expansion::AbstractMatrix{<:Integer})\n\nAllow the supercell to be a tilted extension of cell.\n\n\n\n\n\n","category":"method"},{"location":"#CrystallographyBase.supercell-Tuple{Lattice, AbstractVector{var\"#s27\"} where var\"#s27\"<:Integer}","page":"Home","title":"CrystallographyBase.supercell","text":"supercell(cell::Lattice, expansion::AbstractVector{<:Integer})\n\nReturn a supercell based on cell and expansion coefficients.\n\n\n\n\n\n","category":"method"}]
}
